package comprehensive;

/**
 * A Phrase is a string that can be printed to the console. If a non-terminal is found in the string, the non-terminal
 * will be expanded and printed to the console.
 *
 * @author Rishab Ramalingam and Josh Greenbaum
 * @version August 1,2024
 */
public class Phrase {
    private String phrase;
    private Grammar dad;

    /**
     * Constructs a Phrase object with a string and a grammar object.
     *
     * @param phrase the string to be printed
     * @param parent the grammar object
     */
    public Phrase(String phrase, Grammar parent) {
        this.phrase = phrase;
        this.dad = parent;
    }

    /**
     * Prints the phrase to the console. If a non-terminal is found in the phrase, the non-terminal will be expanded
     * and printed to the console.
     */
    public void print() {
        char[] characters = phrase.toCharArray();
        for (int i = 0; i < characters.length; i++) {
            if (characters[i] == '<') {
                StringBuilder key = new StringBuilder();
                int j;
                for (j = i + 1; characters[j] != '>'; j++) {
                    key.append(characters[j]);
                }
                dad.getNonTerm(key.toString()).print();
                i = j;
            } else {
                System.out.print(characters[i]);
            }
        }
    }
}
